import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import java.util.Collections;
class Result {

    /*
     * Complete the 'rotateLeft' function below.
     */

    public static List<Integer> rotateLeft(int d, List<Integer> arr) 
    {
        
        for(int i=0;i<d;i++)
        {
            int temp=arr.get(0);
            for(int j=0;j<arr.size();j++)
            {
                //for last element
                if(j==arr.size()-1)
                {
                    arr.set(j,temp);
                }
                //for rest of the elements
                else
                {
                    arr.set(j,arr.get(j+1));
                }
            }
        }
        return arr;
    }
}


public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        String[] firstMultipleInput = bufferedReader.readLine().replaceAll("\\s+$", "").split(" ");

        int n = Integer.parseInt(firstMultipleInput[0]);

        int d = Integer.parseInt(firstMultipleInput[1]);

        List<Integer> arr = Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
            .map(Integer::parseInt)
            .collect(toList());

        List<Integer> result = Result.rotateLeft(d, arr);

        bufferedWriter.write(
            result.stream()
                .map(Object::toString)
                .collect(joining(" "))
            + "\n"
        );

        bufferedReader.close();
        bufferedWriter.close();
    }
}